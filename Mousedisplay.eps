import System as sys;
import Shop as so;
import Skill as sq;

const t = StringBuffer(1024); //이 스트링버퍼는 만들어둔 텍스트를 담아둬야 하기 때문에 간단한 출력용으로는
const s = StringBuffer(1024); //따로 스트링버퍼를 하나 더 만들어서 이친구로 간단출력을 해야함.
const Timer = PVariable();
const R_tip = PVariable();

const TipText = [Db("무기는 최대 4개까지 장착 가능합니다."),
                Db("초반에는 생존에 집중하시길 바랍니다."),
                Db("총 36개의 무기를 구매할 수 있습니다."),
                Db("죽어도 아군만 있다면 다시 부활할 수 있습니다."),
                Db("각 캐릭터의 특성을 살려보시길 바랍니다."),
                Db("행운무기는 여럿 컨셉이 존재합니다."),
                Db("상단의 타이머는 진행 시간입니다."),
                Db("지형은 4곳으로 나눠집니다."),
                Db("1시는 재생력과 쿨타임버프를 제공합니다."),
                Db("5시는 도움이 되는 중립유닛이 존재합니다."),
                Db("7시는 골드버프를 제공합니다."),
                Db("11시는 추가 공격력버프를 제공합니다."),
                Db("3분마다 1분의 휴식시간이 주어집니다."),
                Db("이 팁을 읽으면 기분이 좋아집니다."),
                Db("일정시간마다 보스와 엘리트가 등장합니다."),
                Db("초반에는 생존에 집중하시길 바랍니다.")];

var color1 = 0;
var color2 = 0;
const Color_Choose_Normal = [Db("\x1C"), Db("\x10"), Db("\x04"), Db("\x1F"), Db("\x03")];
const Color_Choose_buy = [Db("\x1B"), Db("\x19"), Db("\x1D"), Db("\x02"), Db("\x1E")];
const Color_Choose_bought = [Db("\x1E"), Db("\x1D"), Db("\x1B"), Db("\x1A"), Db("\x15")];
const Color_Bought = Db("\x03");
const Color_Enable = Db("\x05");

// 텍스트 Y축의 시작점
const vertical_Grid_1 = [
    112,// 0
    128,// 1
    144,// 2
    160,// 3
    176,// 4
    192,// 5
    208,// 6
    224,// 7
    240,// 8
    256,// 9
    270,// 10
];

// 텍스트 Y축의 끝점
const vertical_Grid_2 = [
    124,// 0
    140,// 1
    156,// 2
    172,// 3
    188,// 4
    204,// 5
    220,// 6
    236,// 7
    252,// 8
    268,// 9
    282,// 10
];

const ItemType = [Db("\x04(노말)"), Db("\x07(레어)"), Db("\x11(에픽)"), Db("\x03(레전드)")];
const WeaponType = [Db("\x11물리"), Db("\x1F마법"), Db("\x10소환"), Db("\x15행운")];
/* 스킬강화 객체 정보 */
object TreeList { //무기 강화 트리 객체
    var Index;                              //무기번호
    var EnhanceTree_1_Name;                 //1번트리 이름
    var EnhanceTree_2_Name;                 //2번트리 이름
    var EnhanceTree_1_Detail: EUDArray;     //1번트리 설명 [1,2,3,4]
    var EnhanceTree_2_Detail: EUDArray;     //2번트리 설명 [1,2,3,4]
    
    function constructor(Index_, Name_1_, Name_2_, Detail_1_: EUDArray, Detail_2_: EUDArray) {
        // constructor(생성자) 함수는 할당될 때 작동됨
        this.Index =                Index_;
        this.EnhanceTree_1_Name =   Name_1_;
        this.EnhanceTree_2_Name =   Name_2_;
        this.EnhanceTree_1_Detail = Detail_1_;
        this.EnhanceTree_2_Detail = Detail_2_;
    }
};
const WeaponTreeList = EUDArray(45);
function MD_Init() {
    WeaponTreeList[0] = TreeList.alloc(0, Db("공란"), Db("공란"), [Db("공란"), Db("공란"), Db("공란"), Db("공란")], [Db("공란"), Db("공란"), Db("공란"), Db("공란")]);
    //고유무기
    WeaponTreeList[1] = TreeList.alloc(1, Db("방패강화"), Db("검강화"), 
    [Db("방패공격의 범위가 1칸 늘어납니다."), Db("공격하고나서 5+2(물리)의 쉴드를 생성합니다."), Db("물리계수가 0.5, 피해범위가 1칸 늘어납니다."), Db("쿨타임이 1초 감소합니다.")], 
    [Db("검격의 크기가 100%증가합니다."), Db("물리계수가 2만큼 증가합니다."), Db("공격횟수가 1회 늘어납니다."), Db("공격횟수가 1회 늘어나고 쿨타임이 1초 감소합니다.")]);
    WeaponTreeList[2] = TreeList.alloc(2, Db("신궁"), Db("덫사냥꾼"), 
    [Db("공격횟수가 2회 증가합니다."), Db("공격횟수가 3회 증가하고 물리계수가 0.4만큼 증가합니다."), Db("공격횟수가 4회 증가합니다."), Db("무기를 연사하는 동안 피해량이 12%씩 증가합니다. 끝나면 초기화됩니다.")], 
    [Db("탄성궁이 발사될 때 덫을 하나 설치하여 적에게 10+0.7(물리)의 범위피해를 줍니다."), Db("쿨타임이 1초 감소합니다."), Db("덫이 피해범위가 더 넓어집니다."), Db("덫의 피해범위가 더욱 더 넓어집니다.")]);
    WeaponTreeList[3] = TreeList.alloc(3, Db("마법세례"), Db("전투마법사"), 
    [Db("공격횟수가 1회 증가합니다."), Db("피해범위가 넓어집니다."), Db("공격횟수가 2회 증가합니다."), Db("공격횟수가 4회 증가합니다.")], 
    [Db("마법을 시전할 때마다 2+0.1(마법)의 쉴드를 생성합니다."), Db("마법계수가 0.5증가합니다."), Db("파이어볼이 타격지점에 2+0.4(마법)의 지속피해를 줍니다."), Db("쿨타임이 1초 감소합니다.")]);
    WeaponTreeList[4] = TreeList.alloc(4, Db("영구동토"), Db("날카로움"), 
    [Db("모든 빙결의 지속시간이 1초 증가합니다."), Db("서리파편의 피해범위와 빙결범위가 넓어집니다."), Db("빙결된 적은 5의 방어무시 지속피해를 입습니다."), Db("쿨타임이 1초 감소하고 빙결범위가 크게 넓어집니다.")], 
    [Db("빙결된 적이 사망할 때 무작위 적에게 8+0.75(마법)의 단일피해를 주는 파편을 날립니다."), Db("얼음파편의 공격횟수가 2회로 증가합니다."), Db("얼음파편의 마법계수가 0.15증가하고 방어무시피해를 줍니다."), Db("얼음파편의 공격횟수가 4회로 증가합니다.")]);
    WeaponTreeList[5] = TreeList.alloc(5, Db("필연"), Db("황금"), 
    [Db("주사위가 적들 방향으로 유도됩니다."), Db("피해범위가 아주 약간 넓어집니다."), Db("3번째 주사위는 2회 더 튕겨져 나갑니다."), Db("피해범위가 넓어지고 1번 더 튕겨져 나갑니다.")], 
    [Db("주사위가 10%확률로 1번 더 튕겨집니다."), Db("피해범위가 약간 좁아지는 대신 한 번더 튕겨질 확률이 35%로 증가합니다."), Db("쿨타임이 0.5초 감소합니다."), Db("주사위가 더 빨리 튕겨지며 확률이 70%로 증가합니다.")]);
    WeaponTreeList[6] = TreeList.alloc(6, Db("회복도박"), Db("피해도박"), 
    [Db("무기의 쉴드 생성량이 15%확률로 1.5배가 됩니다."), Db("12%의 확률로 체력또한 회복하며 15%확률로 1.5배가 됩니다."), Db("추가 치명타 확률이 10%증가하고 1.8배가 됩니다."), Db("5%의 확률로 3초간 무적이 됩니다.")], 
    [Db("확률수치에 0.5의 행운계수가 추가됩니다. 이 수치는 피해량에만 적용됩니다."), Db("공격횟수가 2회 증가합니다."), Db("22%확률로 피해량이 2배가 됩니다."), Db("10%확률로 공격방식이 범위피해로 변경됩니다.")]);
    WeaponTreeList[7] = TreeList.alloc(7, Db("구원자"), Db("흡수자"), 
    [Db("영혼 최대치가 1기 늘어나며 모든 능력치가 5%증가합니다."), Db("쿨타임이 1초 감소하고 모든 능력치가 5%증가합니다."), Db("한번에 2기를 소환하고 모든 능력치가 5%증가합니다."), Db("모든 능력치가 15%증가합니다.")], 
    [Db("영혼이 사망할 때 영웅의 체력을 5+1.5(소환)만큼 회복시켜줍니다."), Db("영혼이 사망할 때 소환공격력이 5초간 1만큼 증가합니다."), Db("영혼이 재소환될 때 10%확률로 1기 더 소환됩니다."), Db("재소환된 영혼의 유지시간이 사라집니다.")]);
    WeaponTreeList[8] = TreeList.alloc(8, Db("방패강화"), Db("검강화"), [Db("검강화"), Db("검강화"), Db("검강화"), Db("검강화")], [Db("검강화"), Db("검강화"), Db("검강화"), Db("검강화")]);
    //물리무기
    WeaponTreeList[9] = TreeList.alloc(9, Db("쓰나미"), Db("전쟁이다!"), 
    [Db("창이 쓰나미로 변경됩니다. 길이는 짧아지며 폭이 넓어집니다."), Db("쓰나미가 더 빨리 지나가며 한 번 더 공격합니다."), Db("쓰나미의 폭이 2배가 됩니다."), Db("쿨타임이 0.5초 감소합니다.")], 
    [Db("쉴드 생성이 사라지고 공격횟수가 4회 증가합니다."), Db("창을 던질 때마다 이동속도가 20%증가합니다. 1초간 지속됩니다."), Db("공격횟수가 2회 증가하고 투사체 속도가 증가합니다."), Db("창이 더 멀리 나아갑니다.")]);
    WeaponTreeList[10] = TreeList.alloc(10, Db("거대화"), Db("몰아치기"),
    [Db("공격범위가 1칸 증가합니다."), Db("도끼의 피해범위가 넓어집니다."), Db("공격범위가 1칸, 물리계수가 0.2증가합니다."), Db("공격범위가 2칸 증가합니다.")], 
    [Db("쿨타임이 0.25초 감소합니다."), Db("도끼를 한번 더 휘두릅니다."), Db("쿨타임이 0.5초 감소하고 도끼를 두번 더 휘두릅니다."), Db("도끼를 세번 더 휘두릅니다.")]);
    WeaponTreeList[11] = TreeList.alloc(11, Db("삼연발"), Db("다연발"), 
    [Db("물리계수가 0.8증가합니다."), Db("아주 좁은 피해범위를 추가합니다."), Db("공격이 적들에게 튕깁니다. 피해가 감소되지 않습니다."), Db("피해범위가 넓어집니다.")], 
    [Db("공격횟수가 1회 증가합니다."), Db("쿨타임이 0.5초 감소합니다."), Db("공격횟수가 2회 증가합니다."), Db("공격횟수가 3회 증가하고 쿨타임이 0.5초 감소합니다.")]);
    WeaponTreeList[12] = TreeList.alloc(12, Db("과다치유"), Db("피의갈증"), 
    [Db("남는 회복량은 쉴드로 전환됩니다."), Db("회복 비율이 15%증가합니다."), Db("남는 회복량의 50%만큼의 체력재생력을 6초간 얻습니다."), Db("남는 회복량의 25%만큼의 쉴드재생력을 3초간 얻습니다.")], 
    [Db("무기 사거리가 2칸, 물리계수가 1증가합니다."), Db("체력이 75%미만이면 공격횟수가 1회 늘어납니다."), Db("체력이 75%미만이면 쿨타임이 1.5초 감소합니다."), Db("잃은 체력에 비례해서 회복 비율이 증가합니다.")]);
    WeaponTreeList[13] = TreeList.alloc(13, Db("독의제왕"), Db("투척무기"), 
    [Db("중독피해량이 3증가합니다."), Db("중독피해량에 0.25의 물리계수가 추가됩니다."), Db("중독된 적은 죽을 때까지 마비상태가 되어 움직일 수 없습니다."), Db("쿨타임이 0.25초 감소하고 공격횟수가 1회 증가합니다.")], 
    [Db("사거리가 1칸, 물리계수가 1증가합니다."), Db("사거리가 1칸, 공격횟수가 1회 증가합니다."), Db("사거리가 2칸, 공격횟수가 2회 증가합니다."), Db("사거리가 3칸 증가합니다.")]);
    WeaponTreeList[14] = TreeList.alloc(14, Db("저격수"), Db("몰이사냥"), 
    [Db("사거리가 3칸 증가합니다."), Db("물리계수가 1증가합니다."), Db("최소사거리가 5칸이 되지만 사거리가 5칸 증가합니다."), Db("공격횟수가 1, 사거리가 2칸 증가합니다.")], 
    [Db("공격한 대상을 쫓아가는 들개를 2기 소환합니다."), Db("들개의 이동속도와 유지시간이 증가합니다."), Db("사거리가 4칸 증가하며 들개의 소환계수가 0.3증가합니다."), Db("들개가 2기 더 소환됩니다.")]);
    WeaponTreeList[15] = TreeList.alloc(15, Db("학살자"), Db("피해확산"), 
    [Db("피해범위가 0.5칸 증가합니다."), Db("쿨타임이 0.5초 감소합니다."), Db("공격횟수가 1회 증가합니다."), Db("피해범위가 0.75칸, 물리계수가 0.4증가합니다.")], 
    [Db("공격한 후 주변에 한번 더 피해를 줍니다."), Db("확산이 한번 더 이루어집니다."), Db("공격한 위치에 한번 더 공격합니다."), Db("피해량에 마법계수가 0.45가 추가됩니다.")]);
    WeaponTreeList[16] = TreeList.alloc(16, Db("지배된자"), Db("지배한자"), 
    [Db("사거리가 4칸 늘어나며 시전되는 동안 범위 내 아군들에게 3의 고정피해를 줍니다."), Db("고정피해량이 4로 증가하며 공격주기가 0.05초 감소합니다."), Db("고정피해량이 5로 증가하며 지속시간이 3초 증가합니다."), Db("고정피해량이 8으로 증가하며 물리계수가 2증가합니다.")],
    [Db("사거리가 2칸 감소하는 대신 쿨타임이 2초 감소합니다."), Db("공격이 범위피해를 줍니다."), Db("피해범위가 조금 넓어지며 쿨타임이 2초 감소합니다."), Db("피해범위가 매우 넓어집니다.")]);
    WeaponTreeList[17] = TreeList.alloc(17, Db("저주"), Db("연격"), 
    [Db("쌍검에 공격받는 동안 적이 사망하면 주변 적에게 옮겨갑니다."), Db("공격횟수가 1회, 물리계수가 0.1증가합니다."), Db("지속시간이 1초 늘어나고 공격횟수가 1회 증가합니다."), Db("공격횟수가 1회, 지속시간이 1초 늘어납니다.")],
    [Db("쿨타임이 0.5초 감소합니다."), Db("범위피해가 추가됩니다."), Db("기본피해량이 100%증가하고 쿨타임이 0.5초 감소합니다."), Db("쿨타임이 1초 감소합니다.")]);
    //마법무기
    WeaponTreeList[18] = TreeList.alloc(18, Db("방벽"), Db("증폭"), 
    [Db("레이저의 길이가 길어집니다."), Db("쿨타임이 1초 감소합니다."), Db("레이저가 삼각형 형태로 생성됩니다."), Db("길이가 더 길어지며 지속시간이 1초 증가합니다.")], 
    [Db("레이저의 피해범위가 넓어집니다."), Db("마법계수가 0.3증가합니다."), Db("지속시간이 끝날 때 폭발하며 넓은범위에 3배의 피해를 줍니다."), Db("지속시간이 2초, 쿨타임이 4초 감소합니다.")]);
    WeaponTreeList[19] = TreeList.alloc(19, Db("정해진운명"), Db("얽힌실"), 
    [Db("모든 마법이 한번에 시전되지만 효과가 50%감소합니다."), Db("효과 감소량이 44%가 됩니다."), Db("효과 감소량이 35%가 됩니다."), Db("효과 감소량이 25%가 됩니다.")], 
    [Db("모든 마법의 마법계수가 50%증가합니다."), Db("25%확률로 1회 더 시전됩니다."), Db("무작위 마법에 '15+3(마법)의 단일피해를 3회 줍니다.'를 추가합니다."), Db("확률이 50%로 증가하며 쿨타임이 1초 감소합니다.ㄴ")]);
    WeaponTreeList[20] = TreeList.alloc(20, Db("대운석"), Db("소나기"), 
    [Db("피해범위가 1칸 증가합니다."), Db("유성우가 떨어진 자리에 5초동안 6+0.15(마법)의 지속피해를 줍니다."), Db("피해범위가 1.5칸 증가합니다."), Db("한 번에 유성우를 5회 시전합니다.")], 
    [Db("마법계수가 0.3증가합니다."), Db("유성우의 피해범위가 3칸 감소하지만 쿨타임이 1초 감소합니다."), Db("쿨타임이 3초 감소하는 대신 유성우를 1회만 시전합니다."), Db("쿨타임이 0.5초 감소합니다.")]);
    WeaponTreeList[21] = TreeList.alloc(21, Db("수호부적"), Db("천둥의신"), 
    [Db("영웅에게도 번개가 떨어집니다. 피해는 입지 않습니다."), Db("공격한 후 5초간 35%의 이동속도 버프를 얻습니다."), Db("공격한 후 3+0.4(마법)의 쉴드를 얻습니다."), Db("쿨타임이 1초 감소합니다.")],
    [Db("번개가 1회 더 떨어집니다."), Db("쿨타임이 0.25초 감소합니다."), Db("번개가 더 넓은 범위로 지정되며 피해범위가 100%증가합니다."), Db("번개가 2회 더 떨어집니다.")]);
    WeaponTreeList[22] = TreeList.alloc(22, Db("절대영도"), Db("깊은침식"), 
    [Db("얼음 주변의 적들에게 빙결효과를 부여합니다."), Db("쿨타임이 3초 감소합니다."), Db("얼음이 사라질 때 넓은 범위의 적들을 빙결시킵니다."), Db("모든 빙결의 지속시간이 2초 늘어납니다.")],
    [Db("지속될수록 공격속도가 더욱 더 빨라집니다."), Db("지속시간이 2초 증가합니다."), Db("공격횟수가 25%확률로 1회 증가하며 지속시간이 2초 증가합니다."), Db("피해받은 적은 모든 피해를 3만큼 더 받습니다. 이 수치는 누적됩니다.")]);
    WeaponTreeList[23] = TreeList.alloc(23, Db("태초의별"), Db("죽음의별"), 
    [Db("파편의 수가 5개 늘어납니다."), Db("파편의 수가 5개 늘어나며 쿨타임이 3초 감소합니다."), Db("파편의 수가 10개 늘어나며 마법계수가 0.3증가합니다."), Db("파편의 수가 10개 늘어나며 10%확률로 재생성됩니다.")], 
    [Db("파편이 소멸될 때 주변 적들에게 6+0.2(마법)의 범위피해를 줍니다."), Db("기본공격의 마법계수가 0.4줄어들지만 범위피해를 줍니다."), Db("공격 사거리가 줄어들지만 파편의 공격이 직선상의 모든 적에게 피해를 줍니다."), Db("모든 공격의 피해범위가 넓어집니다.")]);
    WeaponTreeList[24] = TreeList.alloc(24, Db("지속력"), Db("다중포탈"), 
    [Db("쿨타임이 1초 감소합니다."), Db("지속시간이 1초 증가합니다."), Db("피해범위와 끌어당기는 범위가 2칸 증가합니다."), Db("쿨타임이 1초 감소하고 지속시간이 1초 증가합니다.")], 
    [Db("피해범위가 1칸 감소하지만 쿨타임이 1초 감소합니다."), Db("끌어당기는 범위가 1칸 감소하지만 소환되는 포탈이 1개 늘어납니다."), Db("마법계수가 0.1증가합니다."), Db("소환되는 포탈이 1개 늘어납니다.")]);
    WeaponTreeList[25] = TreeList.alloc(25, Db("영원한달"), Db("달의뒷면"), 
    [Db("단일피해가 더 자주 발동됩니다."), Db("달이 더 천천히 떨어지며 단일피해의 마법계수가 0.4증가합니다."), Db("단일피해의 사거리가 2칸 늘어납니다."), Db("쿨타임이 사라지며 달이 영구히 플레이어를 따라다닙니다.")], 
    [Db("추락시 달의악마를 1기 소환합니다. 악마는 25+2.5(마법)의 단일피해를 줍니다. 최대 4기"), Db("달의악마의 공격속도와 이동속도가 증가합니다."), Db("달이 더 빨리 떨어지며 쿨타임이 3초 감소합니다."), Db("달의악마가 1기 더 소환됩니다.")]);
    WeaponTreeList[26] = TreeList.alloc(26, Db("부드러움"), Db("올곧음"), 
    [Db("가시가 휘어져 나갑니다. 공격횟수가 1회 증가합니다."), Db("피해범위가 증가하고 쿨타임이 1초 감소합니다."), Db("가시가 주변 적에게 유도됩니다. 유도될수록 피해량이 줄어듭니다."), Db("쿨타임이 2초 감소합니다.")], 
    [Db("공격사거리가 3칸 늘어납니다."), Db("공격횟수가 2회 증가합니다."), Db("마법계수가 0.1증가하고 공격횟수가 3회 늘어납니다."), Db("가시가 두번 왕복하여 피해를 줍니다.")]);
    //소환무기
    WeaponTreeList[27] = TreeList.alloc(27, Db("켈베로스"), Db("악마의힘"), 
    [Db("소환계수가 0.3감소하는 대신 공격횟수가 2회 증가합니다."), Db("소환 최대치가 1기, 공격횟수가 1회 증가합니다."), Db("공격속도와 사거리가 50%증가합니다."), Db("피해범위가 약간 넓어지고 5+0.5(소환)만큼의 최대쉴드를 얻습니다.")], 
    [Db("거대악마가 5초마다 20%의 능력치를 가진 소형악마를 소환합니다. 최대 6기"), Db("소형악마의 능력치가 33%로 증가합니다."), Db("소형악마가 한 번에 2기씩 소환됩니다."), Db("소형악마의 소환 최대치가 2기 증가하고 능력치가 50%로 증가합니다.")]);
    WeaponTreeList[28] = TreeList.alloc(28, Db("강력한야수"), Db("융합체"), 
    [Db("야수의 기본공격력과 체력이 50%증가합니다."), Db("야수의 이동속도와 공격속도가 빨라집니다."), Db("야수의 체력재생력이 크게 상향되고 소환 최대치가 2기 늘어납니다."), Db("모든 소환계수가 0.3증가합니다.")], 
    [Db("두 야수가 합쳐진 융합체로 대체해 1기 소환됩니다. 능력치 또한 합쳐집니다. 최대 2기"), Db("융합체가 피해량만큼의 체력을 회복합니다."), Db("융합체가 적 처치시 영구히 강화됩니다. 기본공격력+0.1, 체력+0.25"), Db("융합체가 75%의 피해감소수치를 얻습니다.")]);
    WeaponTreeList[29] = TreeList.alloc(29, Db("강력한혼"), Db("복수의혼"), 
    [Db("적을 처치할 때마다 5초동안 공격속도가 빨라집니다. 최대 2회까지 중첩됩니다."), Db("적을 처치할 때마다 유닛 주변에 10+0.8(소환)의 범위피해를 줍니다."), Db("혼령이 공격할 때마다 8+0.5(소환)의 단일피해를 추가로 줍니다."), Db("혼령의 단일피해와 체력의 소환계수가 25%증가합니다.")], 
    [Db("혼령이 사망할 때 주변 적들에게 10+0.6(소환)의 범위피해를 줍니다."), Db("처음 사망한 혼령은 25%확률로 8초간 무적상태로 부활합니다."), Db("부활한 혼령은 매우 빠른 공격속도를 가집니다."), Db("부활한 혼령이 5기의 적을 처치한다면 영구히 부활합니다.")]);
    WeaponTreeList[30] = TreeList.alloc(30, Db("함포사격"), Db("지원사격"), 
    [Db("모선이 이제 광범위에 피해를 주는 함포를 발사합니다. 공격 횟수가 2회로 감소합니다."), Db("함포의 사거리가 10칸 늘어나고 소환계수가 0.3증가합니다."), Db("모선이 동일한 피해량의 지속피해를 본인 위치에 가합니다."), Db("모든 공격의 피해범위가 넓어집니다.")], 
    [Db("모선의 공격횟수가 2회 증가합니다."), Db("모선이 공격할 때마다 1의 쉴드를 생성합니다."), Db("모선이 플레이어를 따라다닙니다. 추가로, 공격속도가 25%증가합니다."), Db("모선의 공격횟수가 3회, 소환계수가 0.2증가합니다.")]);
    WeaponTreeList[31] = TreeList.alloc(31, Db("땅의정령"), Db("바람의정령"), 
    [Db("정령이 공격할 때 본인의 체력의 2%를 회복합니다."), Db("체력의 소환계수가 1만큼 증가합니다."), Db("소환 최대치가 2기 늘어나고 쿨타임이 1초 감소합니다."), Db("정령이 사망할 때 영웅의 체력을 5%회복시켜줍니다.")], 
    [Db("정령의 공격속도가 25%증가합니다."), Db("단일피해 소환계수가 0.3증가하고 소환 최대치가 1기 늘어납니다."), Db("쉴드의 소환계수가 0.2증가하고 공격속도가 25%증가합니다."), Db("정령이 사망할 때 정령 체력의 절반만큼의 쉴드를 생성합니다.")]);
    WeaponTreeList[32] = TreeList.alloc(32, Db("공란"), Db("공란"), [Db("공란"), Db("공란"), Db("공란"), Db("공란")], [Db("공란"), Db("공란"), Db("공란"), Db("공란")]);
    WeaponTreeList[33] = TreeList.alloc(33, Db("공란"), Db("공란"), [Db("공란"), Db("공란"), Db("공란"), Db("공란")], [Db("공란"), Db("공란"), Db("공란"), Db("공란")]);
    WeaponTreeList[34] = TreeList.alloc(34, Db("공란"), Db("공란"), [Db("공란"), Db("공란"), Db("공란"), Db("공란")], [Db("공란"), Db("공란"), Db("공란"), Db("공란")]);
    WeaponTreeList[35] = TreeList.alloc(35, Db("공란"), Db("공란"), [Db("공란"), Db("공란"), Db("공란"), Db("공란")], [Db("공란"), Db("공란"), Db("공란"), Db("공란")]);
    //행운무기
    WeaponTreeList[36] = TreeList.alloc(36, Db("인생도박"), Db("미래예지"), 
    [Db("공격이 빗나갈 확률이 10%늘어나고 빗나간다면 다음 공격은 1.5배가 됩니다."), Db("공격이 빗나갈 확률이 5%늘어나고 빗나간다면 다음 공격은 범위피해가 됩니다."), Db("피해 증폭량이 1.5배에서 1.8배로 늘어납니다."), Db("피해범위 증폭량이 더 커집니다.")], 
    [Db("다음 공격이 빗나갈 확률이라면 이번 공격은 무조건 명중합니다."), Db("연속으로 명중할 때마다 공격횟수가 1회씩 증가합니다."), Db("빗나갈 확률이 5%감소합니다."), Db("공격이 빗나간다면 다음 3회의 공격은 무조건 명중합니다.")]);
    WeaponTreeList[37] = TreeList.alloc(37, Db("추가효과"), Db("압도"), 
    [Db("골드 조건을 달성할 때마다 공격범위도 증가합니다."), Db("보유골드가 2000골드 이상이면 쿨타임이 2초 감소합니다."), Db("골드 조건을 달성할 때마다 행운계수가 0.1씩 증가합니다."), Db("보유골드가 5000골드 이상이면 쿨타임이 3초 감소합니다.")], 
    [Db("공격횟수 증가조건이 450골드로 감소합니다."), Db("확률조작 10%마다 공격횟수가 1회 증가합니다."), Db("골드조건이 350골드로 감소합니다."), Db("확률조작의 확률만큼 1번에 2회 공격할 수 있는 기회를 얻습니다.")]);
    WeaponTreeList[38] = TreeList.alloc(38, Db("근원"), Db("카오스"), 
    [Db("행운계수 변동폭이 0.3~1.0이 됩니다."), Db("공격횟수 변동폭이 1~5회가 됩니다."), Db("쿨타임 변동폭이 1~6초가 됩니다."), Db("모든 변동확률들의 비율 평균이 150%에 맞춰집니다.")], 
    [Db("사거리가 20~150%사이로 변동됩니다."), Db("공격범위가 0~100%사이로 변동됩니다. 기준값: 3칸"), Db("투사체 수가 1~3회로 변동됩니다."), Db("모든 변동확률들이 동일한 비율로 맞춰집니다.")]);
    WeaponTreeList[39] = TreeList.alloc(39, Db("무한"), Db("집중력"), 
    [Db("발동 확률의 최대치가 사라집니다. 100%가 넘으면 공격횟수가 늘어납니다."), Db("투사체의 피해량이 8으로 증가합니다."), Db("행운계수가 0.15로 증가합니다."), Db("투사체가 방어력을 무시하며 모든 적에게 100%의 피해를 줍니다.")], 
    [Db("최대확률이 85%로 감소하는 대신 피해량에 0.02의 행운계수가 추가됩니다."), Db("최대확률이 75%로 감소하는 대신 투사체가 범위피해를 줍니다."), Db("기본확률이 10%에서 25%로 증가합니다."), Db("피해량의 행운계수가 0.05로 증가하고 피해범위가 약간 늘어납니다.")]);
    WeaponTreeList[40] = TreeList.alloc(40, Db("분열"), Db("단결"), 
    [Db("재생력 스탯들도 증가합니다."), Db("최소치와 최대치가 1증가하고 모든 스탯들이 무작위로 변동됩니다."), Db("방어력과 확률관련 스탯들도 증가합니다."), Db("골드와 관련된 스탯들도 증가합니다.")], 
    [Db("가장 높은 공격력 스탯만 증가합니다. 최대치가 1증가합니다."), Db("다른 공격력 스탯들도 절반만큼 증가합니다. 최대치가 1증가합니다."), Db("최소치가 1증가하고 쿨타임이 10초 감소합니다."), Db("최대치가 2증가합니다.")]);
    WeaponTreeList[41] = TreeList.alloc(41, Db("해체분석"), Db("방어무시"), 
    [Db("지속시간이 2초 증가합니다."), Db("지속시간동안 일반몹들이 25%의 피해를 더 입습니다."), Db("지속시간동안 엘리트몹들이 25%의 피해를 더 입습니다."), Db("지속시간동안 모든 적들이 25%의 피해를 더 입습니다.")], 
    [Db("방어력 감소량이 15만큼 증가합니다."), Db("쿨타임이 2초 감소하고 방어력 감소량이 15만큼 증가합니다."), Db("지속시간동안 적들의 쉴드가 50%감소합니다."), Db("지속시간동안 모든 적들의 방어력이 0으로 고정됩니다.")]);
    WeaponTreeList[42] = TreeList.alloc(42, Db("금은보화"), Db("현상금"), 
    [Db("골드 최대치가 5만큼 증가합니다."), Db("절반의 수치로 1번 더 골드를 얻습니다."), Db("최소치와 최대치가 8만큼 증가합니다."), Db("쿨타임이 3초 감소합니다.")], 
    [Db("적을 처치할 때마다 2~3골드를 획득합니다."), Db("적 처치골드 최소치와 최대치가 2만큼 증가합니다."), Db("엘리트 몹을 처치한다면 60골드를 추가로 획득합니다."), Db("골드획득량이 15%증가합니다. 최대치 또한 증가합니다.")]);
    WeaponTreeList[43] = TreeList.alloc(43, Db("공란"), Db("공란"), [Db("공란"), Db("공란"), Db("공란"), Db("공란")], [Db("공란"), Db("공란"), Db("공란"), Db("공란")]);
    WeaponTreeList[44] = TreeList.alloc(44, Db("공란"), Db("공란"), [Db("공란"), Db("공란"), Db("공란"), Db("공란")], [Db("공란"), Db("공란"), Db("공란"), Db("공란")]);
}
const EnhanceTree_1_Name = [Db("비어있음"),
                       Db("방패강화"), //고유무기
                       Db("신궁"),
                       Db("마법세례"),
                       Db("영구동토"),
                       Db("성실한일꾼"),
                       Db("사자의군대"),
                       Db("철옹성"), //물리무기
                       Db("거대화"),
                       Db("삼연발"),
                       Db("피의전사"),
                       Db("독의제왕"),
                       Db("저격수"),
                       Db("학살자"),
                       Db("지배된자"),
                       Db("아군보조"),
                       Db("파괴전차"), //마법무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력"),
                       Db("파괴전차"), //소환무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력"),
                       Db("파괴전차"), //행운무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력")];
const EnhanceTree_2_Name = [Db("비어있음"),
                       Db("검강화"), //고유무기
                       Db("덫사냥꾼"),
                       Db("전투마법사"),
                       Db("날카로움"),
                       Db("수확기계"),
                       Db("시체폭발"),
                       Db("마법의힘"), //물리무기
                       Db("몰아치기"),
                       Db("다연발"),
                       Db("갈증"),
                       Db("투척무기"),
                       Db("무리사냥"),
                       Db("피해확산"),
                       Db("지배한자"),
                       Db("생존본능"),
                       Db("파괴전차"), //마법무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력"),
                       Db("파괴전차"), //소환무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력"),
                       Db("파괴전차"), //행운무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력")];
const EnhanceTree_1_Detail_1 = [Db("비어있음"),
                       Db("방패공격의 범위가 1칸 늘어납니다."), //고유무기
                       Db("공격횟수가 2회 증가합니다."),
                       Db("공격횟수가 1회 증가합니다."),
                       Db("아군 회복량이 75%로 증가합니다."),
                       Db("행운계수가 0.5증가합니다."),
                       Db("주술사의 사거리가 3증가하며 소환계수가 2증가합니다."),
                       Db("쿨타임이 0.25초 감소합니다."), //물리무기
                       Db("기본피해량이 50%감소하지만 피해범위가 1칸 증가합니다."),
                       Db("쿨타임이 0.25초 감소합니다."),
                       Db("체력 회복량이 100%증가합니다."),
                       Db("중독피해량이 3증가합니다."),
                       Db("사거리가 3칸 증가합니다."),
                       Db("피해범위가 0.5칸 증가합니다."),
                       Db("사거리가 4칸 늘어나며 시전되는 동안 범위 내 아군들에게 3의 고정피해를 줍니다."),
                       Db("기본쉴드량이 50%증가합니다."),
                       Db("강화1번"), //마법무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력"),
                       Db("파괴전차"), //소환무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력"),
                       Db("파괴전차"), //행운무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력")];
const EnhanceTree_1_Detail_2 = [Db("비어있음"),
                       Db("공격하고나서 5+2(물리)의 쉴드를 생성합니다."), //고유무기
                       Db("공격횟수가 4회 증가하고 물리계수가 2만큼 증가합니다."),
                       Db("피해범위가 넓어집니다."),
                       Db("마법 시전 후 3+0.3(마법)의 골드를 획득합니다."),
                       Db("밀을 파종할 때마다 행운계수만큼의 쉴드를 생성합니다."),
                       Db("소환되는 주술사 수가 1기 증가합니다."),
                       Db("쉴드생성량의 물리계수가 0.75증가합니다."), //물리무기
                       Db("쿨타임이 1초 증가하지만 피해범위가 1칸 증가합니다."),
                       Db("쿨타임이 0.75초 감소합니다."),
                       Db("공격횟수가 1회 증가합니다."),
                       Db("중독피해량에 1의 물리계수가 추가됩니다."),
                       Db("물리계수가 2증가합니다."),
                       Db("쿨타임이 0.5초 감소합니다."),
                       Db("고정피해량이 4로 증가하며 공격주기가 0.1초 감소합니다."),
                       Db("추가로 2초간 10+2(물리)만큼의 쉴드재생력을 얻습니다."),
                       Db("강화2번"), //마법무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력"),
                       Db("파괴전차"), //소환무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력"),
                       Db("파괴전차"), //행운무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력")];
const EnhanceTree_1_Detail_3 = [Db("비어있음"),
                       Db("물리계수가 1, 피해범위가 1칸 늘어납니다.ㄴ"), //고유무기
                       Db("공격횟수가 6회 증가합니다."),
                       Db("공격횟수가 3회 증가합니다."),
                       Db("회복이 5초간 5+0.5(마법)만큼의 체력재생력 버프를 부여합니다."),
                       Db("파종 쿨타임이 5초 감소하고 행운계수가 1증가합니다."),
                       Db("소환 쿨타임이 3초 감소하고 주술사의 공격속도가 빨라집니다."),
                       Db("공격할 때 쉴드생성량만큼의 체력을 추가로 회복합니다."), //물리무기
                       Db("물리계수가 0.5증가합니다."),
                       Db("공격이 적들에게 튕깁니다. 피해가 감소되지 않습니다."),
                       Db("공격할 때마다 체력회복량만큼의 쉴드를 생성합니다."),
                       Db("중독된 적은 죽을 때까지 마비상태가 되어 움직일 수 없습니다."),
                       Db("최소사거리가 5칸이 되지만 사거리가 5칸 증가합니다."),
                       Db("공격횟수가 1회 증가합니다."),
                       Db("고정피해량이 5로 증가하며 지속시간이 3초 증가합니다."),
                       Db("다른 아군 영웅에게는 30%만큼만 부여합니다."),
                       Db("강화3번"), //마법무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력"),
                       Db("파괴전차"), //소환무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력"),
                       Db("파괴전차"), //행운무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력")];
const EnhanceTree_1_Detail_4 = [Db("비어있음"),
                       Db("쿨타임이 1초 감소합니다."),
                       Db("무기를 연사하는 동안 피해량이 10%씩 증가합니다. 끝나면 초기화됩니다."),
                       Db("공격횟수가 6회 증가합니다."),
                       Db("아군 회복량이 100%가 되며 마법계수가 2증가합니다."),
                       Db("10개의 밀을 수확할 때마다 100%의 체력을 회복합니다."),
                       Db("소환되는 주술사 수가 3기 증가합니다."),
                       Db("쿨타임이 0.75초 감소합니다."), //물리무기
                       Db("피해범위가 1칸 증가합니다."),
                       Db("쿨타임이 1초 감소합니다."),
                       Db("공격횟수가 2회 증가합니다."),
                       Db("쿨타임이 0.25초 감소하고 공격횟수가 1회 증가합니다."),
                       Db("공격횟수가 1, 사거리가 2칸 증가합니다."),
                       Db("피해범위가 0.75칸, 물리계수가 1증가합니다."),
                       Db("고정피해량이 8으로 증가하며 물리계수가 4증가합니다."),
                       Db("쿨타임이 1초 감소합니다."),
                       Db("강화4번"), //마법무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력"),
                       Db("파괴전차"), //소환무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력"),
                       Db("파괴전차"), //행운무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력")];
const EnhanceTree_2_Detail_1 = [Db("비어있음"),
                       Db("검격의 크기가 100%증가합니다."), //고유무기
                       Db("탄성궁이 발사될 때 덫을 하나 설치하여 적에게 10+1(물리)의 범위피해를 줍니다."),
                       Db("마법을 시전할 때마다 2+0.1(마법)의 쉴드를 생성합니다."),
                       Db("쿨타임이 1초 감소하고 마법계수가 1증가합니다."),
                       Db("파종 쿨타임과 밀의 성장시간이 8초 감소합니다."),
                       Db("주술사가 사망할 때 8+2(소환)만큼 2칸의 범위피해를 줍니다."),
                       Db("물리계수가 3줄어드는 대신 범위피해를 줍니다."), //물리무기
                       Db("쿨타임이 0.5초 감소합니다."),
                       Db("공격횟수가 2회 증가합니다."),
                       Db("무기 사거리가 2칸 늘어납니다."),
                       Db("사거리가 1칸, 물리계수가 1증가합니다."),
                       Db("공격한 대상을 쫓아가는 들개를 2기 소환합니다."),
                       Db("공격한 후 주변에 한번 더 피해를 줍니다."),
                       Db("사거리가 2칸 감소하는 대신 쿨타임이 2초 감소합니다."),
                       Db("물리계수가 2증가합니다."),
                       Db("강화5번"), //마법무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력"),
                       Db("파괴전차"), //소환무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력"),
                       Db("파괴전차"), //행운무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력")];
const EnhanceTree_2_Detail_2 = [Db("비어있음"),
                       Db("물리계수가 2만큼 증가합니다."), //고유무기
                       Db("쿨타임이 1초 감소합니다."),
                       Db("마법계수가 2증가합니다."),
                       Db("자신에게 부여되는 회복량이 100%증가합니다."),
                       Db("밀의 성장시간이 5초 감소하며 한 번에 2개의 밀을 파종합니다."),
                       Db("소환되는 주술사 수가 1기 증가하고 지속시간이 10초 감소합니다."),
                       Db("쿨타임이 0.5초 증가하는 대신 2의 마법계수가 추가됩니다."), //물리무기
                       Db("물리계수가 1증가합니다."),
                       Db("물리계수가 1, 공격횟수가 2회 증가합니다."),
                       Db("쿨타임이 0.5초 감소합니다."),
                       Db("사거리가 1칸, 공격횟수가 1회 증가합니다."),
                       Db("들개의 이동속도와 유지시간이 증가합니다."),
                       Db("확산이 한번 더 이루어집니다."),
                       Db("공격이 범위피해를 줍니다."),
                       Db("체력이 50%미만이면 쿨타임이 2배 빠르게 감소합니다."),
                       Db("강화6번"), //마법무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력"),
                       Db("파괴전차"), //소환무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력"),
                       Db("파괴전차"), //행운무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력")];
const EnhanceTree_2_Detail_3 = [Db("비어있음"),
                       Db("공격횟수가 1회 늘어납니다."), //고유무기
                       Db("덫이 피해범위가 더 넓어집니다."),
                       Db("파이어볼이 타격지점에 2+0.5(마법)의 지속피해를 줍니다."),
                       Db("쿨타임이 1초 감소하고 회복이 5초간 20%의 이동속도 증가 버프를 부여합니다."),
                       Db("밀을 수확할 때 5%의 확률로 다시 한번 더 파종합니다."),
                       Db("폭발피해의 소환계수가 1증가합니다."),
                       Db("공격횟수가 1회 증가합니다."), //물리무기
                       Db("공격횟수가 1회 증가합니다."),
                       Db("공격횟수가 4회 증가합니다."),
                       Db("무기 사거리가 1칸, 물리계수가 2증가합니다."),
                       Db("사거리가 2칸, 공격횟수가 2회 증가합니다."),
                       Db("사거리가 4칸 증가하며 들개의 소환계수가 2증가합니다."),
                       Db("공격한 위치에 한번 더 공격합니다."),
                       Db("피해범위가 조금 넓어지며 쿨타임이 2초 감소합니다."),
                       Db("체력이 50%미만이면 쉴드 생성량이 2배가 됩니다."),
                       Db("강화7번"), //마법무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력"),
                       Db("파괴전차"), //소환무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력"),
                       Db("파괴전차"), //행운무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력")];
const EnhanceTree_2_Detail_4 = [Db("비어있음"),
                       Db("공격횟수가 1회 늘어나고 쿨타임이 1초 감소합니다."), //고유무기
                       Db("덫의 피해범위가 더욱 더 넓어집니다."),
                       Db("쿨타임이 1초 감소합니다."),
                       Db("초과된 치유량은 쉴드로 변환됩니다."),
                       Db("밀을 수확할 때마다 밀의 기본 골드획득량이 1%씩 증가합니다."),
                       Db("폭발범위가 2칸 증가합니다."),
                       Db("공격횟수가 1회, 마법계수가 1증가합니다."), //물리무기
                       Db("공격횟수가 1회 증가하고 쿨타임이 0.5초 감소합니다."),
                       Db("공격횟수가 6회 증가합니다."),
                       Db("체력이 50%미만이면 쿨타임이 2배 빠르게 감소합니다."),
                       Db("사거리가 3칸 증가합니다."),
                       Db("들개가 2기 더 소환됩니다."),
                       Db("피해량에 마법계수가 2추가됩니다."),
                       Db("피해범위가 넓어집니다."),
                       Db("체력이 5%미만이면 쿨타임이 최소치로 고정됩니다."),
                       Db("강화8번"), //마법무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력"),
                       Db("파괴전차"), //소환무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력"),
                       Db("파괴전차"), //행운무기
                       Db("특대화"),
                       Db("기동력"),
                       Db("피의전사"),
                       Db("암살자"),
                       Db("추가타"),
                       Db("피해확산"),
                       Db("내면의힘"),
                       Db("생존력")];
const ShopPage = PVariable();
function PlayerDisplay_Action(cp);
function GameMain(cp, List: EUDArray, SkillDetail);
function ShopMain(cp);
function WeaponShop(cp);
function WeaponGacha(cp);
function WeaponEnhance(cp, List: EUDArray, CurPage);
function WeaponRemover(cp, List: EUDArray, CurPage);
function StatShop(cp);
function Help_Main(cp);
function Help_GameInfo(cp);
function Help_StatDisplay(cp);
function Help_StatInfo(cp);
function PlayerDisplay_Display(cp, List: EUDArray, SkillDetail, ShopDetail, CurPage) {
	if(IsUserCP()){
        t.insert(0);
        //타이머 설정
        if (Timer[cp] == 0) Timer[cp] = 4;
        else Timer[cp] -= 1;
        //텍스트 출력
        if (ShopDetail == 0) GameMain(cp, List, SkillDetail);
        else if (ShopDetail == 1) ShopMain(cp);
        else if (ShopDetail == 2) WeaponShop(cp);
        else if (ShopDetail == 3) StatShop(cp);
        else if (ShopDetail == 21) WeaponGacha(cp);
        else if (ShopDetail == 22) WeaponEnhance(cp, List, CurPage);
        else if (ShopDetail == 23) WeaponRemover(cp, List, CurPage);
        else if (ShopDetail == 100) Help_Main(cp);
        else if (ShopDetail == 101) Help_GameInfo(cp, CurPage);
        else if (ShopDetail == 102) Help_StatDisplay(cp, CurPage);
        if (ShopDetail >= 1) {
            SetMemoryEPD(EPD(0x657A9C), SetTo, 24);
        } else {
            SetMemoryEPD(EPD(0x657A9C), SetTo, 31);
        }
        t.DisplayAt(0);
    }
    return PlayerDisplay_Action(cp, ShopDetail);
}
function GameMain(cp, List: EUDArray, SkillDetail) {
    const mmX = sys.mouseX;
    const mmY = sys.mouseY;
    if (SkillDetail == 0) {
        if (10 <= mmX && mmX <= 48 && 112 <= mmY && mmY <= 124) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
        else t.append("\x02");
        t.append("[자세히]");
        t.append("\n");
        if (10 <= mmX && mmX <= 48 && 128 <= mmY && mmY <= 140) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
        else t.append("\x02");
        t.append("[도움말]");
        t.append("\n");
        if (10 <= mmX && mmX <= 60 && 144 <= mmY && mmY <= 156) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
        else t.append("\x02");
        t.append("[상점이동]");
    } 
    else if (SkillDetail == 1) {
        if (10 <= mmX && mmX <= 48 && 112 <= mmY && mmY <= 124) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
        else t.append("\x02");
        t.append("[간단히]");
        t.append("\n");
        if (10 <= mmX && mmX <= 48 && 128 <= mmY && mmY <= 140) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
        else t.append("\x02");
        t.append("[도움말]");
        t.append("\n");
        if (10 <= mmX && mmX <= 60 && 144 <= mmY && mmY <= 156) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
        else t.append("\x02");
        t.append("[상점이동]");
        t.append("\n");
        for (var i = 0; i < 4; i++) {
            const weapon = sq.WeaponList.cast(List[i]);
            if (weapon.Index > 0) {
                const CurCool = EUDArray.cast(sq.PlayerSkillCool[cp]);
                t.appendf("\x07{}번:\x04{:s}", i+1, weapon.WeaponName);
                t.appendf("\x02| \x07쿨타임:\x08{}", CurCool[weapon.Ownedidx]);
                if (i < 3) t.append("\n");
            } else {
                t.appendf("\x07{}번:\x04미착용 상태", i+1);
                if (i < 3) t.append("\n");
            }
        }
    }
}
function ShopMain(cp) {
    const mmX = sys.mouseX;
    const mmY = sys.mouseY;
    t.append("\n");
    if (64 <= mmX && mmX <= 114 && vertical_Grid_1[1] <= mmY && mmY <= vertical_Grid_2[1]) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.append("　　　　　[무기상점]");
    t.append("\n");
    if (64 <= mmX && mmX <= 114 && vertical_Grid_1[2] <= mmY && mmY <= vertical_Grid_2[2]) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.append("　　　　　[스탯상점]");
    t.append("\n");
    if (64 <= mmX && mmX <= 114 && vertical_Grid_1[3] <= mmY && mmY <= vertical_Grid_2[3]) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.append("　　　　　[상점닫기]");
    t.append("\n");
    t.append("\n");
    t.appendf("\x08※Tip: \x04{:s}", TipText[R_tip[cp]]);
}
function WeaponShop(cp) {
    const mmX = sys.mouseX;
    const mmY = sys.mouseY;
    t.append("\n");
    if (64 <= mmX && mmX <= 114 && vertical_Grid_1[1] <= mmY && mmY <= vertical_Grid_2[1]) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.append("　　　　　[무기뽑기]");
    t.append("\n");
    if (64 <= mmX && mmX <= 114 && vertical_Grid_1[2] <= mmY && mmY <= vertical_Grid_2[2]) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.append("　　　　　[무기강화]");
    t.append("\n");
    if (64 <= mmX && mmX <= 114 && vertical_Grid_1[3] <= mmY && mmY <= vertical_Grid_2[3]) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.append("　　　　　[무기제거]");
    t.append("\n");
    if (64 <= mmX && mmX <= 114 && vertical_Grid_1[4] <= mmY && mmY <= vertical_Grid_2[4]) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.append("　　　　　[돌아가기]");
    t.append("\n");
    t.append("\n");
    t.appendf("\x08※Tip \x04{:s}", TipText[R_tip[cp]]);
}
function WeaponGacha(cp) {
    const mmX = sys.mouseX;
    const mmY = sys.mouseY;
    const Weapon = sq.WeaponList.cast(sq.WeaponArray[so.CurWeapon[cp]]);
    t.append("\n");
    if (64 <= mmX && mmX <= 114 && vertical_Grid_1[1] <= mmY && mmY <= vertical_Grid_2[1]) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.append("　　　　　[무기뽑기]");
    t.appendf(" \x08{}\x04G \x07무기를 많이 보유할수록 비싸집니다.", so.WeaponGachaCost[cp]);
    t.append("\n");
    t.appendf("　　　　　\x04{:s} \x0E{:s}", Weapon.WeaponName, WeaponType[Weapon.Type]);
    t.append("\n");
    t.appendf("　　　　　\x07{:s}", Weapon.WeaponExplain);
    t.append("\n");
    if (64 <= mmX && mmX <= 114 && vertical_Grid_1[4] <= mmY && mmY <= vertical_Grid_2[4]) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.append("　　　　　[무기선택]");
    t.append("\n");
    if (64 <= mmX && mmX <= 114 && vertical_Grid_1[5] <= mmY && mmY <= vertical_Grid_2[5]) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.append("　　　　　[돌아가기]");
    t.append(" \x08※\x04돌아가면 뽑은 무기는 사라집니다.");
    t.append("\n");
    t.append("\n");
    t.appendf("\x08※Tip \x04{:s}", TipText[R_tip[cp]]);
}
function WeaponEnhance(cp, List: EUDArray, CurPage) {
    const mmX = sys.mouseX;
    const mmY = sys.mouseY;
    const Weapon = sq.WeaponList.cast(List[CurPage/2]);
    const Tree = TreeList.cast(WeaponTreeList[Weapon.Index]);
    t.append("\n");
    t.appendf("　　　　　\x04{:s} {:s}", Weapon.WeaponName, WeaponType[Weapon.Type]);
    t.append("\n");
    for (var i = 0; i < 2; i++) {
        for (var j = 0; j < 4; j++) {
            if (CurPage%2 == i) {
                const temp = [Weapon.WeaponTree_1, Weapon.WeaponTree_2];
                const abs_ = i-1;
                abs_.iabs();
                if (temp[abs_] >= 1) { //다른 트리 구매
                    t.appendf("{:s}", Color_Enable);
                } else {
                    if (temp[i] >= j+1) { //구매함
                        // if (64 <= mmX && mmX <= 350 && vertical_Grid_1[2+j] <= mmY && mmY <= vertical_Grid_2[2+j]) t.appendf("{:s}", Color_Choose_bought[Timer[cp]]);
                        // else t.appendf("{:s}", Color_Bought);
                        t.appendf("{:s}", Color_Bought);
                    } else { //미구매
                        if (64 <= mmX && mmX <= 350 && vertical_Grid_1[2+j] <= mmY && mmY <= vertical_Grid_2[2+j]) t.appendf("{:s}", Color_Choose_buy[Timer[cp]]);
                        else t.append("\x04");
                    }
                }
                if (i == 0) t.appendf("　　　　　[{}-{}]{:s}: {}G", i+1, j+1, Tree.EnhanceTree_1_Detail[j], so.EnhanceTreeCost[j]);
                else if (i == 1) t.appendf("　　　　　[{}-{}]{:s}: {}G", i+1, j+1, Tree.EnhanceTree_2_Detail[j], so.EnhanceTreeCost[j]);
                t.append("\n");
            }
        }
    }
    if (64 <= mmX && mmX <= 104 && vertical_Grid_1[6] <= mmY && mmY <= vertical_Grid_2[6]) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.append("　　　　　[이전창]");
    if (114 <= mmX && mmX <= 164 && vertical_Grid_1[6] <= mmY && mmY <= vertical_Grid_2[6]) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.append("　[돌아가기]");
    if (176 <= mmX && mmX <= 214 && vertical_Grid_1[6] <= mmY && mmY <= vertical_Grid_2[6]) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.append("　[다음창]");
}
const NowText = PVariable();
function WeaponRemover(cp, List: EUDArray, CurPage) {
    const mmX = sys.mouseX;
    const mmY = sys.mouseY;
    const Weapon = sq.WeaponList.cast(List[CurPage]);
    const Tree_1 = Weapon.WeaponTree_1;
    const Tree_2 = Weapon.WeaponTree_2;
    var Cost = 0;
    if (NowText[cp] == 1) Cost = 100 + Tree_1*Tree_1*50 + Tree_2*Tree_2*50;
    if (NowText[cp] == 2) Cost = Tree_1*Tree_1*25 + Tree_2*Tree_2*25;
    t.append("\x04이 곳에서는 얻은 무기를 처리할 수 있습니다. 비용의 일부를 돌려받습니다.");
    t.append("\n");
    t.append("\n");
    t.appendf("　　　　　\x04{:s} \x0E{:s}", Weapon.WeaponName, WeaponType[Weapon.Type]);
    t.append("\n");
    if (64 <= mmX && mmX <= 114 && vertical_Grid_1[4] <= mmY && mmY <= vertical_Grid_2[4]) NowText[cp] = 1;
    else if (64 <= mmX && mmX <= 114 && vertical_Grid_1[5] <= mmY && mmY <= vertical_Grid_2[5]) NowText[cp] = 2;
    else NowText[cp] = 0;
    if (Weapon.Index <= 6 && NowText[cp] <= 1) t.appendf("　　　　　\x07판매가 불가능합니다.");
    else if (NowText[cp] == 0) t.append("　　　　　\x07돌려받는 골드: \x080\x04G");
    else if (NowText[cp] == 1) t.appendf("　　　　　\x07돌려받는 골드: \x08{}\x04G", Cost);
    else if (NowText[cp] == 2) t.appendf("　　　　　\x07돌려받는 골드: \x08{}\x04G", Cost);
    t.append("\n");
    if (64 <= mmX && mmX <= 114 && vertical_Grid_1[4] <= mmY && mmY <= vertical_Grid_2[4]) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.append("　　　　　[폐기처분]");
    t.append("\n");
    if (64 <= mmX && mmX <= 114 && vertical_Grid_1[5] <= mmY && mmY <= vertical_Grid_2[5]) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.append("　　　　　[강화제거]");
    t.append("\n");
    if (32 <= mmX && mmX <= 82 && 208 <= mmY && mmY <= 220) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.append("　　[다음무기]");
    if (90 <= mmX && mmX <= 140 && 208 <= mmY && mmY <= 220) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.append("　[돌아가기]");
    t.append("\n");
}
function StatShop(cp) {
    var TextLine = 0;
    const mmX = sys.mouseX;
    const mmY = sys.mouseY;
    const cpItemList = EUDArray.cast(so.PlayerShopList[cp]);
    t.append("\x04아이템 상점입니다. 스탯을 올려주는 \x07아이템\x04을 구매하실 수 있습니다.");
    t.append("\n");
    TextLine += 1;
    if (21 <= mmX && mmX <= 70 && vertical_Grid_1[TextLine] <= mmY && mmY <= vertical_Grid_2[TextLine]) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.appendf("　[상점리롤]\x07{}\x03G　\x07남은시간: \x0400\x02:", so.ShopRerollCost[cp]);
    const Timer = so.PlayerRerollTimer[cp]/24;
    if (Timer < 10) t.appendf("\x080{}", Timer);
    else t.appendf("\x08{} ", Timer);
    t.appendf("{:s} {}% ", ItemType[0], so.Chance_Normal[sys.Player_ShopLevel[cp]]);
    t.appendf("{:s} {}% ", ItemType[1], so.Chance_Rare[sys.Player_ShopLevel[cp]]);
    t.appendf("{:s} {}% ", ItemType[2], so.Chance_Epic[sys.Player_ShopLevel[cp]]);
    t.appendf("{:s} {}%", ItemType[3], so.Chance_Legend[sys.Player_ShopLevel[cp]]);
    t.append("\n");
    TextLine += 1;
    for (var i = 0; i < 5; i++) {
        const List = so.ItemList.cast(so.ItemArray[cpItemList[i]]);
        if (21 <= mmX && mmX <= 96 && vertical_Grid_1[TextLine] <= mmY && mmY <= vertical_Grid_2[TextLine]) t.append("\x1F");
        else t.append("\x02");
        t.appendf("　[{:s}", List.ItemName);
        if (21 <= mmX && mmX <= 96 && vertical_Grid_1[TextLine] <= mmY && mmY <= vertical_Grid_2[TextLine]) t.append("\x1F");
        else t.append("\x02");
        t.append("]");
        t.appendf("{:s}", ItemType[List.Grade]);
        for (var j = 0; j < List.ListLength; j++) {
            t.appendf(" \x04{:s} ", sys.StatName[List.StatList[j]]);
            const Amount = List.Amount[j];
            if (Amount > 99999) t.appendf("\x08-{}", -Amount);
            else t.appendf("\x07+{}", Amount);
        }
        const Cost = sys.CostCalculation(cp, List.Cost);
        t.appendf(" \x03{}G", Cost);
        t.append("\n");
        TextLine += 1;
    }
    if (21 <= mmX && mmX <= 70 && vertical_Grid_1[TextLine] <= mmY && mmY <= vertical_Grid_2[TextLine]) t.append("\x1F");
    else t.append("\x02");
    t.append("　[돌아가기]");
}
function Help_Main(cp) {
    const mmX = sys.mouseX;
    const mmY = sys.mouseY;
    t.append("\x04플레이에 도움이 되는 것들이 적힌 곳입니다.");
    t.append("\n");
    if (64 <= mmX && mmX <= 114 && vertical_Grid_1[1] <= mmY && mmY <= vertical_Grid_2[1]) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.append("　　　　　[게임방법]");
    t.append("\n");
    if (64 <= mmX && mmX <= 114 && vertical_Grid_1[2] <= mmY && mmY <= vertical_Grid_2[2]) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.append("　　　　　[스탯확인]");
    t.append("\n");
    if (64 <= mmX && mmX <= 114 && vertical_Grid_1[3] <= mmY && mmY <= vertical_Grid_2[3]) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.append("　　　　　[특성확인]");
    t.append("\n");
    if (64 <= mmX && mmX <= 114 && vertical_Grid_1[4] <= mmY && mmY <= vertical_Grid_2[4]) t.appendf("{:s}", Color_Choose_Normal[Timer[cp]]);
    else t.append("\x02");
    t.append("　　　　　[돌아가기]");
}
function Help_GameInfo(cp, CurPage) {
    const mmX = sys.mouseX;
    const mmY = sys.mouseY;
    t.appendf("\x1E==================+\x07{}\x04페이지\x02/\x076\x04페이지\x1E+==================", CurPage+1);
    t.append("\n");
    if (CurPage == 0) {
        t.append("      \x04이 게임은 무기와 아이템을 사며 점차 강해지는 것을 기본으로 합니다.");
        t.append("\n");
        t.append("      \x03[자세히]\x04를 누르면 보유하고 있는 무기와 현재 쿨타임을 알 수 있습니다.");
        t.append("\n");
        t.append("      \x03[상점이동]\x04을 누르면 무기상점과 스탯상점을 이용하실 수 있습니다.");
        t.append("\n");
    }
    else if (CurPage == 1) {
        t.append("      \x04상점은 크게 2개로 구분됩니다. \x03[무기상점]\x04과\x03[스탯상점]");
        t.append("\n");
        t.append("      \x03[무기상점]\x04에서는 무기의 구매, 강화, 초기화가 가능합니다.");
        t.append("\n");
        t.append("      \x04무기는 캐릭터의 주속성과 상관없이 구매가 가능합니다.");
        t.append("\n");
    }
    else if (CurPage == 2) {
        t.append("      \x04무기강화는 한쪽 테크트리만 선택해서 강화가 가능합니다.");
        t.append("\n");
        t.append("      \x04다른 테크트리로 바꾸고 싶다면 무기초기화를 하면 됩니다.");
        t.append("\n");
        t.append("      \x04다른 무기로 바꾸고 싶다면 무기처분을 선택하시면 됩니다.");
        t.append("\n");
    }
    else if (CurPage == 3) {
        t.append("      \x03[스탯상점]\x04에서는 여럿 스탯들을 증감시켜주는 아이템을 살 수 있습니다.");
        t.append("\n");
        t.append("      \x04새로고침 비용은 \x0350G\x04씩 증가하며 1분마다 자동으로 비용이 초기화됩니다.");
        t.append("\n");
        t.append("      \x04적처치, 골드획득, 아이템구매, 새로고침을 할 때마다 \x07경험치\x04를 획득합니다.");
        t.append("\n");
    }
    else if (CurPage == 4) {
        t.append("      \x04레벨이 올라가면 상위등급의 아이템이 나올 확률이 증가합니다.");
        t.append("\n");
        t.append("      \x04상점레벨은 \x076\x04레벨까지 올릴 수 있습니다.");
        t.append("\n");
        t.append("      \x04각 등급별 등장확률은 상점창에서 볼 수 있습니다.");
        t.append("\n");
    }
    else if (CurPage == 5) {
        t.append("      \x04본인의 스탯과 그 설명은 \x03[스탯확인]\x04에서 볼 수 있습니다.");
        t.append("\n");
        t.append("      \x04모든 매뉴 창에서는 \"\x07Esc\x04\"키를 눌러 처음으로 돌아갈 수 있습니다.");
        t.append("\n");
        t.append("      \x04설명은 여기가 끝입니다.");
        t.append("\n");
    }
    t.append("\x1E=============");
    if (112 <= mmX && mmX <= 172 && 176 <= mmY && mmY <= 188) t.append("\x1F");
    else t.append("\x02");
    t.append("[이전페이지]");
    t.append("\x02|");
    if (180 <= mmX && mmX <= 216 && 176 <= mmY && mmY <= 188) t.append("\x1F");
    else t.append("\x02");
    t.append("[나가기]");
    t.append("\x02|");
    if (224 <= mmX && mmX <= 284 && 176 <= mmY && mmY <= 188) t.append("\x1F");
    else t.append("\x02");
    t.append("[다음페이지]");
    t.append("\x1E==============");
}
const SeeDetail = PVariable();
function Help_StatDisplay_Left(mmX, mmY) {
    if (12 <= mmX && mmX <= 20 && vertical_Grid_1[1] <= mmY && mmY <= vertical_Grid_2[8]) t.append("\x1F▶");
    else t.append("\x02▷");
}
function Help_StatTable(cp, LineIndex) {
    const mmX = sys.mouseX;
    const mmY = sys.mouseY;
    Help_StatDisplay_Left(mmX, mmY);
    if (LineIndex == 0) {
        t.appendf("\x04체력: \x07{}", sys.Visual_Hp[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04영웅의 최대체력입니다. 체력이 0이되면 사망합니다. 기본값 \x03150 \x04최소치 \x081 \x04최대치 \x0750만");
    }
    if (LineIndex == 1) {
        if (sys.Visual_Pm[cp] > 1000) t.appendf("\x04피해감소량: \x07-{}% ", -sys.Visual_Pm[cp]);
        else t.appendf("\x04피해감소량: \x07+{}% ", sys.Visual_Pm[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04수치값만큼 받는피해 비율이 변경됩니다. 기본값 \x030% \x04최소치 \x08-100% \x04최대치 \x0796%");
    }
    if (LineIndex == 2) {
        t.appendf("\x04고정방어력: \x07{} ", sys.Visual_Am[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04수치값만큼의 피해를 감소합니다. 피해감소량 보다 먼저 계산됩니다. 기본값 \x03100 \x04최소치 \x080 \x04최대치 \x07500");
    }
    if (LineIndex == 3) {
        if (sys.Visual_Hr[cp] > 5000) t.appendf("\x04체력재생력: \x07-{} ", -sys.Visual_Hr[cp]);
        else t.appendf("\x04체력재생력: \x07+{}", sys.Visual_Hr[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x045초동안 수치만큼의 체력을 회복합니다. 음수값에서는 회복되지 않습니다. 기본값 \x030 \x04최소치 \x08-1000 \x04최대치 \x07500");
    }
    if (LineIndex == 4) {
        t.appendf("\x04쉴드: \x07{}", sys.Visual_Sh[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04일시적인 추가 체력입니다. 기본값 \x030 \x04최소치 \x080 \x04최대치 \x076만");
    }
    if (LineIndex == 5) {
        t.appendf(" \x04쉴드방어력: \x07{} ", sys.Visual_Sm[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04기본값이 높지만 최대치는 낮습니다. 기본값 \x03150 \x04최소치 \x080 \x04최대치 \x07250");
    }
    if (LineIndex == 6) {
        if (sys.Visual_Sr[cp] > 5000) t.appendf("\x04쉴드재생력: \x07-{}", -sys.Visual_Sr[cp]);
        else t.appendf("\x04쉴드재생력: \x07+{}", sys.Visual_Sr[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x045초동안 수치만큼의 체력을 회복합니다. 음수값에서는 회복되지 않습니다. 기본값 \x030 \x04최소치 \x08-1000 \x04최대치 \x071000");
    }
    if (LineIndex == 7) {
        if (sys.Visual_Pa[cp] > 5000) t.appendf("\x04공격력: \x07-{}% ", -sys.Visual_Pa[cp]);
        else t.appendf("\x04공격력: \x07+{}% ", sys.Visual_Pa[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04모든 피해의 공격력을 계산한 이후 수치%만큼 공격력을 변동시킵니다. 기본값 \x030 \x04최소치 \x08-500% \x04최대치 \x07500%");
    }
    if (LineIndex == 8) {
        if (sys.Visual_Pd[cp] > 5000) t.appendf("\x04물리공격력: \x07-{} ", -sys.Visual_Pd[cp]);
        else t.appendf("\x04물리공격력: \x07+{} ", sys.Visual_Pd[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04계열 무기의 수치*계수만큼 무기의 피해량을 증가시킵니다. 기본값 \x030 \x04최소치 \x08-1000 \x04최대치 \x071000");
    }
    if (LineIndex == 9) {
        if (sys.Visual_Md[cp] > 5000) t.appendf("\x04마법공격력: \x07-{} ", -sys.Visual_Md[cp]);
        else t.appendf("\x04마법공격력: \x07+{} ", sys.Visual_Md[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04계열 무기의 수치*계수만큼 무기의 피해량을 증가시킵니다. 기본값 \x030 \x04최소치 \x08-1000 \x04최대치 \x071000");
    }
    if (LineIndex == 10) {
        if (sys.Visual_Sd[cp] > 5000) t.appendf("\x04소환공격력: \x07-{} ", -sys.Visual_Sd[cp]);
        else t.appendf("\x04소환공격력: \x07+{} ", sys.Visual_Sd[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04계열 무기의 수치*계수만큼 무기의 피해량을 증가시킵니다. 기본값 \x030 \x04최소치 \x08-1000 \x04최대치 \x071000");
    }
    if (LineIndex == 11) {
        if (sys.Visual_Ld[cp] > 5000) t.appendf("\x04행운공격력: \x07-{}", -sys.Visual_Ld[cp]);
        else t.appendf("\x04행운공격력: \x07+{}", sys.Visual_Ld[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04계열 무기의 수치*계수만큼 무기의 피해량을 증가시킵니다. 기본값 \x030 \x04최소치 \x08-1000 \x04최대치 \x071000");
    }
    if (LineIndex == 12) {
        t.appendf("\x04이동속도: \x07{}", sys.Visual_Sp[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04수치%만큼 이동속도가 변경됩니다. 기본값 \x03100% \x04최소치 \x0810% \x04최대치 \x07900%");
    }
    if (LineIndex == 13) {
        t.appendf("\x04골드획득량: \x07{}", sys.Visual_Gd[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04유닛 처치시 수치%만큼의 미네랄을 추가 획득합니다. 음수값이라면 감소합니다. 기본값 \x030% \x04최소치 \x08-90% \x04최대치 \x07+100%");
    }
    if (LineIndex == 14) {
        t.appendf("\x04행운: \x07{}", sys.Visual_Lu[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x045초마다 수치만큼의 골드를 획득하며 음수값이라면 골드를 잃습니다. 기본값 \x030 \x04최소치 \x08-100 \x04최대치 \x07500");
    }
    if (LineIndex == 15) {
        if (sys.Visual_Gc[cp] > 5000) t.appendf("\x04골드생성: \x070");
        else t.appendf("\x04골드생성: \x07{}", sys.Visual_Gc[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04상점 확률에 추가적인 운을 부여합니다. 기본값 \x030% \x04최소치 \x080% \x04최대치 \x07100%");
    }
    if (LineIndex == 16) {
        t.appendf("\x04생존력: \x07{}", sys.Visual_Su[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04사망했을때 수치값을 1 감소시키며 맵 중앙에서 즉시 부활합니다. 기본값 \x030 \x04최소치 \x080 \x04최대치 \x0710");
    }
    if (LineIndex == 17) {
        t.appendf("\x04할인: \x07{}%", sys.Visual_Dc[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04상점 아이템의 비용을 수치%만큼 감소시켜줍니다. 기본값 \x030% \x04최소치 \x080% \x04최대치 \x0750%");
    }
    if (LineIndex == 18) {
        t.appendf("\x04강인함: \x07{}", sys.Visual_En[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04아이템의 스탯 감소치를 줄여줍니다. 수치 1마다 25%의 저항력을 가집니다. 기본값 \x030 \x04최소치 \x089 \x04최대치 \x073");
    }
    if (LineIndex == 19) {
        t.appendf("\x04룬의힘: \x07{}", sys.Visual_Rune_Open[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04상점에 룬아이템이 추가로 등장합니다. 기본값 \x030 \x04최소치 \x080 \x04최대치 \x071");
    }
    if (LineIndex == 20) {
        t.appendf("\x04성장의룬: \x07{}", sys.Visual_Rune_Level[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x045초마다 무작위 스탯을 증가시킵니다. 기본값 \x030 \x04최소치 \x080 \x04최대치 \x071");
    }
    if (LineIndex == 21) {
        t.appendf("\x04파괴의룬: \x07{}", sys.Visual_Rune_Remove[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x042초마다 5칸내의 적에게 공격력수치만큼 피해를 줍니다. 기본값 \x030 \x04최소치 \x080 \x04최대치 \x071");
    }
    if (LineIndex == 22) {
        t.appendf("\x04가속의룬: \x07{}", sys.Visual_Rune_Accel[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04상하좌우 한방향으로 이동할 때 이동속도가 점차 빨라집니다. 기본값 \x030 \x04최소치 \x081 \x04최대치 \x071");
    }
    if (LineIndex == 23) {
        t.appendf("\x04생명의룬: \x07{}", sys.Visual_Rune_Life[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04적을 처치할 때마다 0.25%만큼의 체력을 회복합니다. 기본값 \x030 \x04최소치 \x080 \x04최대치 \x071");
    }
    if (LineIndex == 24) {
        t.appendf("\x04보호의룬: \x07{}", sys.Visual_Rune_Shield[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04체력이 피해를 입을 때 2의 쉴드를 생성합니다. 기본값 \x030 \x04최소치 \x080 \x04최대치 \x071");
    }
    if (LineIndex == 25) {
        t.appendf("\x04신의힘: \x07{}", sys.Visual_God_Open[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04상점에 권능아이템이 추가로 등장합니다. 기본값 \x030 \x04최소치 \x080 \x04최대치 \x071");
    }
    if (LineIndex == 26) {
        t.appendf("\x04황금의권능: \x07{}", sys.Visual_God_Gold[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04구매한 아이템 등급에 따라 추가 능력치를 얻습니다. 기본값 \x030 \x04최소치 \x081 \x04최대치 \x071");
    }
    if (LineIndex == 27) {
        t.appendf("\x04생명의권능: \x07{}", sys.Visual_God_Life[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04체력재생력과 쉴드재생력이 2배 더 빨리 회복됩니다. 기본값 \x030 \x04최소치 \x080 \x04최대치 \x071");
    }
    if (LineIndex == 28) {
        t.appendf("\x04시간의권능: \x07{}", sys.Visual_God_Time[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04상점의 리롤 쿨타임이 2배 빨라집니다. 기본값 \x030 \x04최소치 \x080 \x04최대치 \x071");
    }
    if (LineIndex == 29) {
        t.appendf("\x04불멸의권능: \x07{}", sys.Visual_God_Immotal[cp]);
        if (SeeDetail[cp]) t.append("\x02 | \x04체력이 0으로 떨어졌을 때 15초간 무적상태가 됩니다. 2분의 쿨타임을 가집니다. 기본값 \x030 \x04최소치 \x080 \x04최대치 \x071");
    }
    t.append("\n");
}
function Help_StatDisplay(cp, CurPage) {
    const mmX = sys.mouseX;
    const mmY = sys.mouseY;
    if (40 <= mmX && mmX <= 76 && vertical_Grid_1[0] <= mmY && mmY <= vertical_Grid_2[0]) {
        t.append("\x17스탯창\x1F▲▲▲\x17위로이동");
    } else {
        t.append("\x17스탯창\x02△△△\x17위로이동");
    }
    t.append("\n");
    const MaxPage = CurPage + 7;
    for (var i = CurPage; i < MaxPage; i++) {
        Help_StatTable(cp, i);
    }
    if (40 <= mmX && mmX <= 76 && vertical_Grid_1[8] <= mmY && mmY <= vertical_Grid_2[8]) {
        t.append("\x17스탯창\x1F▼▼▼\x17아래로이동");
    } else {
        t.append("\x17스탯창\x02▽▽▽\x17아래로이동");
    }
}
function Tip_Text_Change(cp) {
    R_tip[cp] += 1;
    if (R_tip[cp] >= TipText.length) R_tip[cp] = 0;
    ShopPage[cp] = 0;
}
function PlayerDisplay_Action(cp, ShopDetail){
    var Clicked = 0;
    if (sys.mouseClick[cp] == 1) { //왼클릭 했을 때
        const mmX = sys.mouseUserX[cp];
        const mmY = sys.mouseUserY[cp];
        if (ShopDetail == 0) { //기본창
            //이제 액션을 취할 땐, 모든 유저에게 공유된 데이터로 처리해야 방이 갈리지 않음.
            if (10 <= mmX && mmX <= 48 && 112 <= mmY && mmY <= 124) { //스킬상세 열/닫
                Clicked = 1;
            }
            if (10 <= mmX && mmX <= 60 && 128 <= mmY && mmY <= 140) { //도움말 보기
                Clicked = 2;
            }
            if (10 <= mmX && mmX <= 48 && 144 <= mmY && mmY <= 156) { //상점창 열기
                Clicked = 3;
                ShopPage[cp] = 100;
                Tip_Text_Change(cp);
            }
        }
        else if (ShopDetail == 1) { //상점메인
            if (64 <= mmX && mmX <= 114 && vertical_Grid_1[1] <= mmY && mmY <= vertical_Grid_2[1]) { //무기상점
                Clicked = 1;
                Tip_Text_Change(cp);
            }
            if (64 <= mmX && mmX <= 114 && vertical_Grid_1[2] <= mmY && mmY <= vertical_Grid_2[2]) { //스탯상점
                Clicked = 2;
            }
            if (64 <= mmX && mmX <= 114 && vertical_Grid_1[3] <= mmY && mmY <= vertical_Grid_2[3]) { //상점닫기
                Clicked = 3;
            }
        }
        else if (ShopDetail == 2) { //무기상점
            if (64 <= mmX && mmX <= 114 && vertical_Grid_1[1] <= mmY && mmY <= vertical_Grid_2[1]) { //무기상점
                Clicked = 1;
                Tip_Text_Change(cp);
            }
            if (64 <= mmX && mmX <= 114 && vertical_Grid_1[2] <= mmY && mmY <= vertical_Grid_2[2]) { //스탯상점
                Clicked = 2;
            }
            if (64 <= mmX && mmX <= 114 && vertical_Grid_1[3] <= mmY && mmY <= vertical_Grid_2[3]) { //상점닫기
                Clicked = 3;
            }
            if (64 <= mmX && mmX <= 114 && vertical_Grid_1[4] <= mmY && mmY <= vertical_Grid_2[4]) { //이전창으로
                Clicked = 4;
            }
        }
        else if (ShopDetail == 21) { //무기뽑기
            if (64 <= mmX && mmX <= 114 && vertical_Grid_1[1] <= mmY && mmY <= vertical_Grid_2[1]) {
                Clicked = 1;
            }
            if (64 <= mmX && mmX <= 114 && vertical_Grid_1[4] <= mmY && mmY <= vertical_Grid_2[4]) {
                Clicked = 2;
            }
            if (64 <= mmX && mmX <= 114 && vertical_Grid_1[5] <= mmY && mmY <= vertical_Grid_2[5]) {
                Clicked = 3;
            }
        }
        else if (ShopDetail == 22) { //무기강화
            if (64 <= mmX && mmX <= 350 && vertical_Grid_1[2] <= mmY && mmY <= vertical_Grid_2[2]) {
                Clicked = 1;
            }
            if (64 <= mmX && mmX <= 350 && vertical_Grid_1[3] <= mmY && mmY <= vertical_Grid_2[3]) {
                Clicked = 2;
            }
            if (64 <= mmX && mmX <= 350 && vertical_Grid_1[4] <= mmY && mmY <= vertical_Grid_2[4]) {
                Clicked = 3;
            }
            if (64 <= mmX && mmX <= 350 && vertical_Grid_1[5] <= mmY && mmY <= vertical_Grid_2[5]) {
                Clicked = 4;
            }
            if (64 <= mmX && mmX <= 104 && vertical_Grid_1[6] <= mmY && mmY <= vertical_Grid_2[6]) {
                Clicked = 5;
            }
            if (114 <= mmX && mmX <= 164 && vertical_Grid_1[6] <= mmY && mmY <= vertical_Grid_2[6]) {
                Clicked = 6;
            }
            if (176 <= mmX && mmX <= 214 && vertical_Grid_1[6] <= mmY && mmY <= vertical_Grid_2[6]) {
                Clicked = 7;
            }
        }
        else if (ShopDetail == 23) { //무기분해
            if (64 <= mmX && mmX <= 114 && 176 <= mmY && mmY <= 188) { //무기제거
                Clicked = 1;
            }
            if (64 <= mmX && mmX <= 114 && 192 <= mmY && mmY <= 204) { //강화제거
                Clicked = 2;
            }
            if (32 <= mmX && mmX <= 82 && 208 <= mmY && mmY <= 220) { //다음무기
                Clicked = 3;
            }
            if (90 <= mmX && mmX <= 140 && 208 <= mmY && mmY <= 220) { //돌아가기
                Clicked = 4;
            }
        }
        else if (ShopDetail == 3) { //스탯상점
            if (21 <= mmX && mmX <= 68 && 129 <= mmY && mmY <= 140) {
                Clicked = 1; //상점리롤
            }
            for (var i = 0; i < 5; i++) {
                if (21 <= mmX && mmX <= 214 && vertical_Grid_1[i+2] <= mmY && mmY <= vertical_Grid_2[i+2]) {
                    Clicked = 2+i; //아이템 구매
                }
            }
            if (21 <= mmX && mmX <= 68 && 224 <= mmY && mmY <= 236) {
                Clicked = 7; //상점리롤
            }
        }
        else if (ShopDetail == 100) { //도움말
            if (64 <= mmX && mmX <= 114 && vertical_Grid_1[1] <= mmY && mmY <= vertical_Grid_2[1]) {
                Clicked = 1;
            }
            if (64 <= mmX && mmX <= 114 && vertical_Grid_1[2] <= mmY && mmY <= vertical_Grid_2[2]) {
                Clicked = 2;
            }
            if (64 <= mmX && mmX <= 114 && vertical_Grid_1[3] <= mmY && mmY <= vertical_Grid_2[3]) {
                Clicked = 3;
            }
            if (64 <= mmX && mmX <= 114 && vertical_Grid_1[4] <= mmY && mmY <= vertical_Grid_2[4]) {
                Clicked = 4;
            }
        }
        else if (ShopDetail == 101) { //게임방법
            if (112 <= mmX && mmX <= 172 && 176 <= mmY && mmY <= 188) {
                Clicked = 1;
            }
            if (180 <= mmX && mmX <= 216 && 176 <= mmY && mmY <= 188) {
                Clicked = 2;
            }
            if (224 <= mmX && mmX <= 284 && 176 <= mmY && mmY <= 188) {
                Clicked = 3;
            }
        }
        else if (ShopDetail == 102) { //스탯확인
            if (12 <= mmX && mmX <= 20 && vertical_Grid_1[1] <= mmY && mmY <= vertical_Grid_2[8]) { //자세히
                Clicked = 3;
            }
            //뒤로 가기
        }
    }
    if (sys.mouseClicked[cp] == 1) { //왼클릭 꾹 했을 때
        const mmX = sys.mouseUserX[cp];
        const mmY = sys.mouseUserY[cp];
        if (ShopDetail == 102) { //스탯확인
            if (40 <= mmX && mmX <= 76 && vertical_Grid_1[0] <= mmY && mmY <= vertical_Grid_2[0]) { //위쪽 키
                Clicked = 1;
            }
            if (40 <= mmX && mmX <= 76 && vertical_Grid_1[8] <= mmY && mmY <= vertical_Grid_2[8]) { //아래 키
                Clicked = 2;
            }
        }
    }
    return Clicked;
}

function displayAction1(cp); //c언어처럼 미리 함수를 선언해서 에러가 뜨지 않게 함.
function displayText1(cp){ //상대좌표를 이용한 텍스트
	if(IsUserCP()){
		//텍스트는 비공유이기 때문에 비공유 데이터를 그대로 가져와서 색상변화를 주는게 빠름.
		//애초에 공유화된 데이터는 왼클릭을 해야만 얻을 수 있기때문에 실시간 색변화는 비공유 이용!
		const mmX = sys.mouseX;
		const mmY = sys.mouseY;
		if(40 <= mmX && mmX <= 243 && 160 <= mmY && mmY <= 172){
            if(color1 == 0){
                color1 = 1; sys.textUpdate[cp] = 1;
            }
        } else{
            if(color1 == 1){
                color1 = 0; sys.textUpdate[cp] = 1;
            }
        }
		if(40 <= mmX && mmX <= 243 && 177 <= mmY && mmY <= 189){if(color2 == 0){color2 = 1; sys.textUpdate[cp] = 1;}}
		else{if(color2 == 1){color2 = 0; sys.textUpdate[cp] = 1;}}
		if(sys.textUpdate[cp] > 0){
			sys.textUpdate[cp] = 0;
			t.insert(0);
			t.append("\x1E━━━━\x02━━━━\x04━━━상대좌표━━━\x02━━━━\x1E━━━━\n");
			t.append("\n");
			t.append("        \x02",ptr2s(sys.colorL[color1]),"[ 여기에 마우스를 올리면 색이 바뀌어요! ]\n");
			t.append("        \x02",ptr2s(sys.colorL[color2]),"[ 여기에 마우스를 올리면 색이 바뀌어요! ]\n");
			t.append("\n");
			t.append("\x1E━━━━\x02━━━━\x04━━━━━━━━━━\x02━━━━\x1E━━━━");
		}
		t.DisplayAt(1); //텍스트를 위에서 생성한 후, 생성된 텍스트를 계속 띄워줌.
	}
	displayAction1(cp);
}

function displayAction1(cp){
	if(sys.mouseClick[cp] == 1){ //왼클릭 했을 때
		//이제 액션을 취할 땐, 모든 유저에게 공유된 데이터로 처리해야 방이 갈리지 않음.
		const mmX = sys.mouseUserX[cp];
		const mmY = sys.mouseUserY[cp];
		if(40 <= mmX && mmX <= 243 && 160 <= mmY && mmY <= 172){
			s.print("첫번째 리스트를 클릭했네요.");
		}
		if(40 <= mmX && mmX <= 243 && 177 <= mmY && mmY <= 189){
			s.print("두번째 리스트를 클릭했네요.");
		}
	}
}

function displayAction2(cp); //c언어처럼 미리 함수를 선언해서 에러가 뜨지 않게 함.
function displayText2(cp){ //상대좌표와 스크린사이즈를 이용한 중앙정렬 인식
	if(IsUserCP()){
		//텍스트는 비공유이기 때문에 비공유 데이터를 그대로 가져와서 색상변화를 주는게 빠름.
		//애초에 공유화된 데이터는 왼클릭을 해야만 얻을 수 있기때문에 실시간 색변화는 비공유 이용!
		const mmX = sys.mouseX+320-sys.screenSizeX;
		const mmY = sys.mouseY;
		if(218 <= mmX && mmX <= 422 && 160 <= mmY && mmY <= 172){if(color1 == 0){color1 = 1; sys.textUpdate[cp] = 1;}}
		else{if(color1 == 1){color1 = 0; sys.textUpdate[cp] = 1;}}
		if(218 <= mmX && mmX <= 422 && 177 <= mmY && mmY <= 189){if(color2 == 0){color2 = 1; sys.textUpdate[cp] = 1;}}
		else{if(color2 == 1){color2 = 0; sys.textUpdate[cp] = 1;}}
		if(sys.textUpdate[cp] > 0){
			sys.textUpdate[cp] = 0;
			t.insert(0);
			t.append("\x13\x1E━━━━\x02━━━━\x04━━━중앙정렬━━━\x02━━━━\x1E━━━━\n");
			t.append("\n");
			t.append("\x13\x02",ptr2s(sys.colorL[color1]),"[ 여기에 마우스를 올리면 색이 바뀌어요! ]\n");
			t.append("\x13\x02",ptr2s(sys.colorL[color2]),"[ 여기에 마우스를 올리면 색이 바뀌어요! ]\n");
			t.append("\n");
			t.append("\x13\x1E━━━━\x02━━━━\x04━━━━━━━━━━\x02━━━━\x1E━━━━");
		}
		t.DisplayAt(1); //텍스트를 위에서 생성한 후, 생성된 텍스트를 계속 띄워줌.
	}
	displayAction2(cp);
}

function displayAction2(cp){
	if(sys.mouseClick[cp] == 1){ //왼클릭 했을 때
		//이제 액션을 취할 땐, 모든 유저에게 공유된 데이터로 처리해야 방이 갈리지 않음.
		const mmX = sys.mouseUserX[cp]+320-sys.screenUserX[cp];
		const mmY = sys.mouseUserY[cp];
		if(218 <= mmX && mmX <= 422 && 160 <= mmY && mmY <= 172){
			s.print("첫번째 리스트를 클릭했네요.");
		}
		if(218 <= mmX && mmX <= 422 && 177 <= mmY && mmY <= 189){
			s.print("두번째 리스트를 클릭했네요.");
		}
	}
}